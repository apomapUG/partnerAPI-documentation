import{_ as t,c as o,o as e,a}from"./app.d637ae10.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"Authorization","slug":"authorization","link":"#authorization","children":[]}],"relativePath":"authorization.md"}'),n={name:"authorization.md"},r=a(`<h3 id="authorization" tabindex="-1">Authorization <a class="header-anchor" href="#authorization" aria-hidden="true">#</a></h3><hr><p>The apomap partner API uses the API Key authorization type. It accepts a key-value pair argument which is added to the HTTP Header. The authorization header will be automatically attached to every request.</p><p>The key must always be <strong><em>&quot;authorization&quot;</em></strong>, and its value is a token of type <strong><em>String</em></strong>. This token is unique and different for each location (pharmacy) and has this structure:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">&quot;authorization&quot; : &quot;apomap.6f98452ac54214c985015c75&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>A <strong>TOKEN</strong> has either <strong><em>&quot;read&quot;</em></strong> or <strong><em>&quot;write&quot;</em></strong> permissions. A token with <strong><em>&quot;read&quot;</em></strong> permission will only be able to access or get information from the apomap partner API. In contrast, a token with <strong><em>&quot;write&quot;</em></strong> permission will only be able to change or mutate data via the API. However, a token with both <strong><em>&quot;read&quot;</em></strong> and <strong><em>&quot;write&quot;</em></strong> permissions will be able to access and change or edit data or information from the API.</p><p>You can choose to assign one or all permissions to a single <strong>TOKEN</strong>. You can also decide what you can use a token for, either for one query or all queries, one mutation or all mutations or all queries and mutations.</p><br><br><h5 id="how-to-create-permission-s-for-a-token" tabindex="-1">How to create permission(s) for a token <a class="header-anchor" href="#how-to-create-permission-s-for-a-token" aria-hidden="true">#</a></h5><hr><p>Obtaining or creating a token (with permissions) for a location can quickly be done from the user&#39;s dashboard by following the following steps:</p><ol><li>Go to the settings</li><li>Click on <strong>&quot;Schnittstellen&quot;</strong></li><li>Create a token by clicking on the <strong>&quot;Neuen Token erstellen&quot;</strong></li><li>Fill in all necessary details like - <strong>&quot;Merkname&quot;</strong>, <strong>&quot;Prefix&quot;</strong>, etc</li><li>Click on the <strong>&quot;Berechtigungen wählen&quot;</strong> button and select the appropriate permission for the token</li><li>Select the location (pharmacy) by clicking on the <strong>&quot;Standort wählen&quot;</strong> button</li><li>Finally, click on the <strong>&quot;Erstellen&quot;</strong> button</li></ol>`,13),s=[r];function i(l,u,c,h,p,d){return e(),o("div",null,s)}const q=t(n,[["render",i]]);export{m as __pageData,q as default};
